+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
-  __  ____   _____    ___ _   _ ___ ___  ___   ___ ___  ___   _    ___ _  _ _   ___  __  -
+ |  \/  \ \ / / __|  / __| | | |_ _|   \| __| | __/ _ \| _ \ | |  |_ _| \| | | | \ \/ /  +
- | |\/| |\ V /\__ \ | (_ | |_| || || |) | _|  | _| (_) |   / | |__ | || .` | |_| |>  <   -
+ |_|  |_| \_/ |___/  \___|\___/|___|___/|___| |_| \___/|_|_\ |____|___|_|\_|\___//_/\_\  +
-                                                                                         -
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

First part of guide for remote linux projects with Makefile.
Working on MVS and using remote Linux machine allows you to use IntelSense and debugger
MVS 2019
GUIDE version 0.0.01
--------------------------------------------------------------------------------------------
			WHAT DO YOU NEED LIST
--------------------------------------------------------------------------------------------
0)Straight arms

1)Pluged on Raspbbery(Ethernet connection too) and your Raspberry Pi hostname(Enable ssh  in Raspbbery Pi preferences)
	command to check your hostname ->$ hostname -I

2)openssh-server, g++,gdb,gdbserver this crap must to be installed on linux machine 
	command for installation -> $sudo apt-get install openssh-server g++ gdb gdbserver

2)Putty on windows machine
	download can find here->https://www.putty.org/

3)Obviosly MVS with Linux package
	If needed install it
	1)Start->Visual Studio installer 
	2)"in Installed page"
		more->modify 
	3)in "Workloads"
		scroll down and press on "Linux development with C++"
	4)press "modify" button
	5)???
	6)PROFIT!!!
--------------------------------------------------------------------------------------------
		NEW PROJECT CONFIGURATION PART
--------------------------------------------------------------------------------------------
*All is happening in MVS
----------------------------------------------------------------------
CREATION:
-------------------------------------------------------------
1)Open MVS and chose "Create new project"

2)Chose "Makefile Project" if you havent it back to "WHAT DO YOU NEED LIST" punkt 3

3)Write path where to store it on your machine

4)MVS can or can not show you pop out window where you need to enter Linux device info(hostname,user,password etc) fill it with info
if it did not appiered go staigth to "IN PROJECT" section punkt 1

5)????

6)PROFIT!!!!

-----------------------------------------------------------
IN PROJECT:
------------------------------------------------------

with * will be marked configs for test project

1)Connect your Linux machine to MVS :
	press F5 will appier pop out window if not then Tool->Options->Cross Platform->press "Add button" fill pop out window with needed info(hostname,user e.t.c)

2)Configure project for Make  
	2.1)For knowing what it is Makefile project
		Project->$(Your project name)Properties..->General
		Add this part:
		Configuration Type->Makefile
	
	2.2)For compilation:
		Project->$(Your project name)Properties..->Remote Build
		Add this parts:
			Build Command Line ->make
			Rebuild All Command Line-> make
			Clean All Command Line -> make clean
			
	2.3)For Debugging
		Project->$(Your project name)Properties->Debugging
		""
		Program->$(FULL_PATH_TO_EXE)/$(EXE_NAME)
		*Program- -> /home/pi/projects/Testera/AnotherTest
		
	2.4)Switch Solution platform from x86 to ARM (on left of green triangle a.k.a f5)
	
	
#If you press ctr+f5 MVS will automatecly create project folder in the Linux directory ~/projects
	
3)Create files for testing purpose with *configs in my case
		
	Create Source.cpp file(it can be with different name I used this for guides purpose)
	in MVS paste this code:

		#include <iostream>

		int main()
		{

			std::cout << "HELLO WORLD I AM ALIVE!@\n";
			return 0;
		}

	//Press ctr+f5 and MVS will create project folder in Linux  machine (by defoult ~/project) 
	//and transfers cpp file into it but 	error will appier MVS cannot find Make file

3.1)Create simple Makefile in project folder(in Linux not in the MVS)

	#Something like that
	CC= g++ -g -Wall
	#compiling project and linking
	AnotherTest:Source.o
		$(CC) -o $@ Source.cpp
	#command what allows you to delete obj files by -make clean
	.PHONY:clean
	clean:
		-rm *.o

 
 3.2) TRY again ctr+f5 it must work debugger too
 

 Source for thinking (RUS)->https://habr.com/ru/company/microsoft/blog/319962/
	
	